# Equinox-Zenburn Colorscheme
#
# Authors:
# Alain Mebsout <alainmebsout@gmail.com>
#
# Feel free to modify and share!

gtk_color_scheme = "fg_color:#3f3f3f\nbg_color:#dcdccc\nbase_color:#FFF\ntext_color:#3f3f3f\nselected_bg_color:#688060\nselected_fg_color:#dcdccc\ntooltip_bg_color:#efefaf\ntooltip_fg_color:#3f3f3f"

gtk-icon-sizes = "panel-menu=24,24:gtk-button=16,16"

##########
# PANELS 
##########
include "panel.rc" # This includes the file that handles panel theming. Gradient panel backgrounds are enabled by default for this setting. Please edit panel.rc if you don't want gradient backgrounds in your panels, or plan to use transparent/custom panels.

# The following lines make panel-menu-applet, slab-main-menu and gimmie applet's text bold. The radius value sets the roundness value of the selected menu-item.
style "bold-panel-menu"
{
	font_name = "Bold"

}

style "bold-panel-slab"
{
	font_name = "Bold"
}
widget "*Panel*slab-main-menu-panel-button*" style "bold-panel-slab"
widget "*gimmie*" style "bold-panel-slab"
widget "*Panel*MenuBar*" style "bold-panel-menu"

style "murrine-default"
{

	
	########
	# Style Properties
	########
	
	GtkTreeView	::odd_row_color = "#F0EFED"
  	GtkTreeView	::even_row_color = "#FAF9F7"

    GtkButton::default_border = { 0, 0, 0, 0 }
    GtkButton::child-displacement-x = 0
    GtkButton::child-displacement-y = 1
    GtkWidget::focus-padding = 0

    GtkRange::trough-border   = 1
    GtkRange::slider-width    = 15
    GtkRange::stepper_size    = 18
    GtkRange::stepper_spacing = 0

    GtkScrollbar::min_slider_length = 30
    GtkScrollbar::has-secondary-forward-stepper = 0
    GtkScrollbar::has-secondary-backward-stepper = 1

    GtkPaned::handle_size  = 6

    GtkMenuBar::internal-padding  = 0
    GtkTreeView::expander_size    = 13
    GtkExpander::expander_size    = 13

    GtkScale::slider-length = 12
    GtkScale::slider-width  = 12
    GtkScale::trough-border = 2


    WnckTasklist::fade-overlay-rect = 0
    WnckTasklist::fade-loop-time    = 5.0 # 5 seconds
    WnckTasklist::fade-opacity      = 0.5 # final opacity

    #makes menu only overlap border
    #GtkMenu::horizontal-offset  = -2
    GtkMenu::horizontal-padding = 0

    #removes extra padding at top and bottom of menus.  Makes menuitem overlap border
    GtkMenu::vertical-padding = 0

    #set to the same as roundness, used for better hotspot selection of tabs
    GtkNotebook::tab-curvature = 2.5
    GtkNotebook::tab-overlap   = 3

    GtkMenuItem::arrow-spacing = 10
    #Spacing between edge with indicator and text
    GtkOptionMenu  ::indicator-size = {11, 5}
    #GtkOptionMenu  ::indicator-spacing = {6, 5, 4, 4}

    GtkCheckButton ::indicator-size    = 15
    GtkCheckButton ::indicator-spacing = 1
    GtkRadioButton ::indicator-size    = 15

    # A new color must be defined since affectation of mix or shade functions to GtkTreeView::odd_row_color raise this message :
    # Gtk-Message: (for origin information, set GTK_DEBUG): failed to retrieve property `GtkTreeView::odd-row-color' of type `GdkColor' from rc file value "((GString*) 0x9ccba00)" of type `GString'
    #color["odd_row_color"] = mix(0.35, @bg_color, @base_color)
    GtkTreeView::horizontal_separator = 2
    #GtkTreeView::odd_row_color = @odd_row_color

    GtkScrolledWindow::scrollbar-spacing       = 0
    GtkScrolledWindow::scrollbars-within-bevel = 1
    GtkScrolledWindow::window-placement-set    = 0

    GtkEntry::honors-transparent-bg-hint = 1

    GtkWidget::new-tooltip-style = 1

	# Glow the tasklist by changing the color, instead of overlaying it with a rectangle
	#WnckTasklist   ::fade-overlay-rect    = 0

	GtkWidget::link-color	= "#5C888B"
	GtkWidget::visited-link-color = "#9C6363"

	xthickness = 1
	ythickness = 1

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[ACTIVE]        = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = shade (0.65, @bg_color)

	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[ACTIVE]        = shade (0.88, @bg_color)
	bg[SELECTED]	  = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[ACTIVE]      = shade (0.65, @bg_color)
	base[SELECTED]    = shade (1.05, @selected_bg_color)
	base[INSENSITIVE] = @bg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[ACTIVE]      = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = shade (0.65, @bg_color)

    engine "equinox" {
        curvature           = 2.5
        menubarstyle        = 1 # 0 = flat, 1 = gradient
        toolbarstyle        = 1 # 0 = flat, 1 = gradient
        buttonstyle         = 0 # 0 = normal, 1 = glassy
        menuitemstyle       = 0 # 0 = normal, 1 = glassy
        listviewheaderstyle = 0 # 0 = normal, 1 = glassy
        scrollbarstyle      = 1 # 0 = normal, 1 = glassy, 2 = normal with handles, 3 = glassy with handles
        scalesliderstyle    = 0 # 0 = normal, 1 = glassy, 2 = normal with bullet
        checkradiostyle     = 0 # 0 = normal, 1 = glassy
        animation           = FALSE # FALSE = disabled, TRUE = enabled
        arrowsize           = 0.1 # controls combo_arrow circle size.  Diameter set by (11 + 2 * arrowsize)
    }
}

style "murrine-wide"
{
	xthickness = 2
	ythickness = 2
}

style "murrine-wider"
{
	xthickness = 3
	ythickness = 3
}

style "murrine-button" = "murrine-wider"
{
  	bg[PRELIGHT]    = "#a2c795"	
	bg[SELECTED] = shade (1.5, @selected_bg_color) # pre-selected buttons, keep same as focus colour
}

style "murrine-notebook"
{
	bg[NORMAL] = shade (1.05, @bg_color)
	bg[ACTIVE] = shade (0.96, @bg_color)

}

style "murrine-tasklist" = "murrine-wide"
{
}

style "murrine-toolbar" = "murrine-default"
{

	    bg[NORMAL] = shade (1.0, @bg_color)
}

style "murrine-menu" = "murrine-wider"
{
	bg[SELECTED]	= shade (0.85, @tooltip_bg_color)
	bg[NORMAL]	= "#3C3C3C"
	bg[PRELIGHT]	= shade (0.85, @tooltip_bg_color)
	bg[ACTIVE]	= "#333333"
	bg[INSENSITIVE]	= "#3C3C3C"
	fg[NORMAL]	= @selected_fg_color #"#E6E6E6" # Color for normal text.
	fg[PRELIGHT]	= @selected_fg_color
	fg[SELECTED]	= @selected_fg_color
	fg[ACTIVE]	= @selected_fg_color
	fg[INSENSITIVE]	= shade (1.40, "#3C3C3C") #"#666666"
	text[NORMAL]	= @base_color # Color for menu-item radio/checks.
	base[NORMAL]	= shade (0.85, @tooltip_bg_color)#"#666666" # Color for menu-item radio/checks background.
	text[PRELIGHT]	= @selected_fg_color
	text[SELECTED]	= @selected_fg_color
	text[ACTIVE]	= @selected_fg_color
	text[INSENSITIVE]	= shade (1.40, "#3C3C3C") #"#666666"
	#bg[NORMAL]   = shade (1.05, @bg_color)
	#fg[PRELIGHT] = @selected_fg_color
}

style "murrine-menubar"
{
	fg[PRELIGHT] = "#dca3a3"
	ythickness = 0
	bg[SELECTED]	= shade (0.85, "#dca3a3")
	bg[NORMAL]	= "#3C3C3C" # Background color for menubars.
	bg[PRELIGHT]	= shade (0.85, "#dca3a3")
	bg[ACTIVE]	= "#333333"
	bg[INSENSITIVE]	= "#3C3C3C"
	fg[NORMAL]	= @selected_fg_color #"#E6E6E6" # Color for normal text.
	fg[PRELIGHT]	= @selected_fg_color
	fg[SELECTED]	= @selected_fg_color
	fg[ACTIVE]	= @selected_fg_color
	fg[INSENSITIVE]	= shade (1.40, "#3C3C3C") #"#666666"
	text[NORMAL]	= @selected_fg_color #"#E6E6E6"
	text[PRELIGHT]	= @selected_fg_color
	text[SELECTED]	= @selected_fg_color
	text[ACTIVE]	= @selected_fg_color
	text[INSENSITIVE]	= shade (1.40, "#3C3C3C") #"#666666"
}

style "murrine-menu-item" = "murrine-wider"
{
	#bg[PRELIGHT] = "#3f3f3f"
  	fg[PRELIGHT]  = "#3f3f3f" #Text color on hover-over
	bg[SELECTED] = "#efefaf" #shade (1.02, @selected_bg_color)

}

style "murrine-separator-menu-item"
{
}

style "murrine-treeview"
{
}

style "murrine-treeview-header" = "murrine-default"
{
}

style "murrine-frame-title"
{
}

style "murrine-tooltips" = "murrine-wider"
{
	bg[NORMAL] = @tooltip_bg_color
	fg[NORMAL] = @tooltip_fg_color
}

style "murrine-progressbar"
{
	xthickness = 2
	ythickness = 2

	fg[PRELIGHT] = shade (1.1, @selected_fg_color)

}

style "murrine-statusbar"
{
}

style "murrine-comboboxentry"
{
}

style "murrine-combomenu"
{
        fg[PRELIGHT] = @bg_color
}

style "murrine-spinbutton"
{
}

style "murrine-scale"
{

}

style "murrine-hscale"
{
}

style "murrine-vscale"
{
}

style "murrine-scrollbar" 
{
	engine "equinox" {
        	curvature = 6
	}

	bg[ACTIVE]	= shade (0.95, @selected_bg_color)
	base[NORMAL]	= @bg_color


	bg[PRELIGHT]    = shade (1.3, @selected_bg_color)#"#a2c795"	
	bg[NORMAL]	= shade (0.9, @selected_bg_color)
	#bg[PRELIGHT] 	= @selected_bg_color#"#FF0000"#shade (1.1, @bg_color)
	bg[SELECTED] 	= shade (0.8, @selected_bg_color)

	base[SELECTED] = shade (0.8, @selected_bg_color)
}

style "murrine-hscrollbar"
{
}

style "murrine-vscrollbar"
{
}

style "murrine-nautilus-location"
{
	bg[NORMAL] = @selected_bg_color
}

style "metacity-frame"
{
}

style "murrine-radiocheck"
{
	text[NORMAL]   = @selected_fg_color
	text[PRELIGHT] = @selected_fg_color
	#bg[SELECTED] = @selected_bg_color # HACK: override button selection colour
}

style "murrine-panel"
{
}

#########################################
# Matches
#########################################

# Theme default style is applied to every widget
class "GtkWidget"    					style "murrine-default"

# Increase the x/ythickness in some widgets
class "GtkToolbar"   					style "murrine-toolbar" 
class "GtkRange"     					style "murrine-wide"
class "GtkFrame"     					style "murrine-wide"
class "GtkSeparator" 					style "murrine-wide"
class "GtkEntry"     					style "murrine-wider"

class "GtkSpinButton"  					style "murrine-spinbutton"
class "GtkScale"       					style "murrine-scale"
class "GtkVScale"      					style "murrine-vscale"
class "GtkHScale"      					style "murrine-hscale"
class "GtkScrollbar"   					style "murrine-scrollbar"
class "GtkVScrollbar"  					style "murrine-vscrollbar"
class "GtkHScrollbar"  					style "murrine-hscrollbar"

class "GtkRadio*"                        		style:highest "murrine-radiocheck" # HACK: override button selection colour
class "GtkCheck*"                           		style:highest "murrine-radiocheck" # HACK: override button selection colour

# Use this to customize Metacity colours (causes issues with KDE/gtk-window-decorator)
class "MetaFrames" 					style "metacity-frame"
#class "GtkWindow"    			    		style "metacity-frame"


# General matching following, the order is choosen so that the right styles override each other
# eg. progressbar needs to be more important then the menu match.

# This is not perfect, it could be done better
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>"     	style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>"		style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLayout>"       	style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkViewport>"		style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkScrolledWindow>"	style "murrine-notebook"

widget_class "*<GtkButton>"      			style "murrine-button"
widget_class "*<GtkNotebook>"    			style "murrine-notebook"
widget_class "*<GtkStatusbar>*"  			style "murrine-statusbar"

widget_class "*<GtkComboBoxEntry>*"			style "murrine-comboboxentry"
widget_class "*<GtkCombo>*"         			style "murrine-comboboxentry"
widget_class "*.GtkComboBox.GtkMenu" 		        style "murrine-combomenu"

widget_class "*<GtkMenuBar>*"           		style "murrine-menubar"
widget_class "*<GtkMenu>*"              		style "murrine-menu"
widget_class "*<GtkMenuItem>*"          		style "murrine-menu-item"
widget_class "*<GtkSeparatorMenuItem>*" 		style "murrine-separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>" 			style "murrine-frame-title"
widget_class "*.<GtkTreeView>*"        			style "murrine-treeview"

widget_class "*<GtkProgress>"				style "murrine-progressbar"
widget_class "*<GtkProgressBar>"       			style "murrine-progressbar"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" 		style "murrine-treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"    		style "murrine-treeview-header"
widget_class "*.<GtkList>.<GtkButton>"     		style "murrine-treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"    		style "murrine-treeview-header"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"    			style "murrine-treeview-header"
widget_class "*.ETree.ECanvas"    			style "murrine-treeview-header"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" 					style "murrine-tooltips"

###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" 			style : highest "murrine-nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
# This style does not affect GtkComboBoxEntry, it does have an effect
# on comboboxes in appears-as-list mode though.
style "murrine-combobox-text-color-workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[ACTIVE]      = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = shade (0.65, @bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>"		style "murrine-combobox-text-color-workaround"

style "murrine-menuitem-text-is-fg-color-workaround"
{
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[SELECTED]      = @selected_fg_color
	text[INSENSITIVE]   = shade (0.65, @bg_color)
}

widget "*.gtk-combobox-popup-menu.*"   			style "murrine-menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "murrine-fg-is-text-color-workaround"
{
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = shade (0.65, @bg_color)
}

widget_class "*<GtkListItem>*" 				style "murrine-fg-is-text-color-workaround"

# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also change the headers.
widget_class "*<GtkCList>" 				style "murrine-fg-is-text-color-workaround"

style "murrine-evo-new-button-workaround"
{

	#engine "murrine"
	#{
	#	toolbarstyle = 0
	#}
}

widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "murrine-evo-new-button-workaround"

# Theme panel elements
widget "*PanelWidget*" 					style "murrine-panel"
widget "*PanelApplet*" 					style "murrine-panel"
widget "*fast-user-switch*"				style "murrine-panel" # workaround for Fast User Switch applet
class "PanelApp*" 					style "murrine-panel"
class "PanelToplevel*" 					style "murrine-panel"
widget_class "*Mail*" 					style "murrine-panel"
widget_class "*notif*" 					style "murrine-panel"
widget_class "*Notif*" 					style "murrine-panel"


###################################################
# SPECIAL CASES AND WORKAROUNDS
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "murrine-nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in appears-as-list mode.
# This style does not affect GtkComboBoxEntry, it does have an effect on comboboxes in appears-as-list mode though.
style "murrine-text-is-fg-color-workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>"   style "murrine-text-is-fg-color-workaround"

style "murrine-menuitem-text-is-fg-color-workaround"
{
	text[NORMAL]        = @selected_fg_color
	text[PRELIGHT]      = "#3f3f3f"
	text[SELECTED]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[INSENSITIVE]   = darker (@bg_color)
}
widget "*.gtk-combobox-popup-menu.*"   style "murrine-menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color set.
style "murrine-fg-is-text-color-workaround"
{
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = darker (@bg_color)
	
}
widget_class "*<GtkListItem>*" style "murrine-fg-is-text-color-workaround"
# The same problem also exists for GtkCList and GtkCTree.
# Only match GtkCList and not the parent widgets, because that would also change the headers.
widget_class "*<GtkCList>" style "murrine-fg-is-text-color-workaround"
widget_class "*<EelEditableLabel>" style "murrine-fg-is-text-color-workaround"
#widget "MozillaGtkWidget*" style "murrine-fg-is-text-color-workaround"

